import java.nio.file.Files
import java.nio.file.Paths

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.sdk_version = 'v0.2.5'
    ext.kotlin_version = '1.7.0'
    repositories {
        google()
        mavenCentral()
        flatDir {
            dirs 'gradle_deps'
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.4"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'io.github.bit-man:javagit:0.2.0'
        classpath 'org.eclipse.jgit:org.eclipse.jgit:6.2.0.202206071550-r'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
    subprojects.each {
        it.afterEvaluate {
            def cleanTask = it.tasks.findByName('clean')
            if (cleanTask) {
                dependsOn(cleanTask)
            }
        }
    }
}

task buildArtifacts {
    description "build all artifacts and move them to a directory for uploading"

    dependsOn "configurator:assembleRelease"
    dependsOn "example:assembleRelease"
    dependsOn "lib:assembleRelease"

    doLast {
        File stage = new File("${System.getenv("HOME")}/stage/uplink")
        stage.mkdirs()
        for (File file in stage.listFiles()) {
            file.delete()
        }
        String configurator = project.rootProject.rootDir.path + "/configurator/build/outputs/apk/release/configurator-release.apk"
        String example = project.rootProject.rootDir.path + "/example/build/outputs/apk/release/example-release.apk"
        String lib = project.rootProject.rootDir.path + "/lib/build/outputs/aar/uplink-release.aar"
        Files.copy(Paths.get(configurator), Paths.get(stage.path, "configurator_${sdk_version}.apk"))
        Files.copy(Paths.get(example), Paths.get(stage.path, "example_${sdk_version}.apk"))
        Files.copy(Paths.get(lib), Paths.get(stage.path, "uplink_${sdk_version}.aar"))
    }
}
